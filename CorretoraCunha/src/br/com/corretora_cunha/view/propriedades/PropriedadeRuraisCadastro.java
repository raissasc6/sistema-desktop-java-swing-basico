/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.corretora_cunha.view.propriedades;

import br.com.corretora_cunha.ctr.PropriedadeCTR;
import br.com.corretora_cunha.ctr.RelatorioCTR;
import br.com.corretora_cunha.dto.PropriedadeDTO;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.channels.FileChannel;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import static java.util.logging.Level.parse;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sf.jasperreports.engine.JRException;
/**
 *
 * @author ra6sa
 */
public class PropriedadeRuraisCadastro extends javax.swing.JFrame {
    Map parametros = new HashMap();
    private int gravar_alterar; //Variavel usada para saber se esta alterando o incluindo
    private ResultSet rs; // Variavel usada para preenchimeto da tabela e dos campos
    PropriedadeCTR propriedadeCTR = new PropriedadeCTR(); //Cria um obejto propriedadeCTR
    PropriedadeDTO propriedadeDTO = new PropriedadeDTO(); //Cria um objeto pessoaDTO
    /**
     * Creates new form PropriedadeRuraisCadastrar
     */
    public PropriedadeRuraisCadastro() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.id_prop.disable();
        this.gravar_alterar=1;
        btnPasta.setVisible(false);
        this.pasta_prop.disable();
        btnMapa.setVisible(false);
        btnRelatorio.setVisible(false);
        btnExcluir.setVisible(false);
    }
    public PropriedadeRuraisCadastro(int id_prop) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.gravar_alterar=2;
        this.id_prop.disable();
        preencherCampos(id_prop);
        this.pasta_prop.disable();
        if(coordenada_prop.getText().equalsIgnoreCase("")){
             btnMapa.setVisible(false);
         }else{
             btnMapa.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNomeSistema = new javax.swing.JLabel();
        lblcadatro = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblEstado = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        lblCoords = new javax.swing.JLabel();
        estado_prop = new javax.swing.JComboBox<>();
        cidade_prop = new javax.swing.JTextField();
        coordenada_prop = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        nome_prop = new javax.swing.JTextField();
        lblData = new javax.swing.JLabel();
        data_prop = new javax.swing.JTextField();
        btnMapa = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblProprietario = new javax.swing.JLabel();
        proprietario_prop = new javax.swing.JTextField();
        lblFonte = new javax.swing.JLabel();
        fonte_prop = new javax.swing.JTextField();
        lblValor = new javax.swing.JLabel();
        valor_prop = new javax.swing.JTextField();
        lblSituacao = new javax.swing.JLabel();
        situacao_prop = new javax.swing.JComboBox<>();
        lblMatricula = new javax.swing.JLabel();
        matricula_prop = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        lblAreaTotal = new javax.swing.JLabel();
        area_prop = new javax.swing.JTextField();
        lblAreaReserva = new javax.swing.JLabel();
        area_reserva_prop = new javax.swing.JTextField();
        lblAtividade = new javax.swing.JLabel();
        atividade_prop = new javax.swing.JComboBox<>();
        unidade_prop = new javax.swing.JComboBox<>();
        lblBenfeitoria = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        benfeitoria_prop = new javax.swing.JTextArea();
        lblComplemento = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        complemento_prop = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnImg = new javax.swing.JLabel();
        btnArquivos = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JLabel();
        id_prop = new javax.swing.JTextField();
        pasta_prop = new javax.swing.JTextField();
        btnRelatorio = new javax.swing.JLabel();
        btnPasta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(8, 89, 43)));

        lblNomeSistema.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/nome80.jpg"))); // NOI18N

        lblcadatro.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblcadatro.setForeground(new java.awt.Color(8, 89, 43));
        lblcadatro.setText("Propriedade rural");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setForeground(new java.awt.Color(21, 60, 16));

        lblEstado.setText("Estado:");

        lblCidade.setText("Cidade:");

        lblCoords.setText("Coord.:");

        estado_prop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        estado_prop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estado_propActionPerformed(evt);
            }
        });

        lblNome.setText("Nome:");

        lblData.setText("Data:");

        btnMapa.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        btnMapa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/map.png"))); // NOI18N
        btnMapa.setText("Abrir no mapa");
        btnMapa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMapaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nome_prop))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(data_prop, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblCoords)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(coordenada_prop))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblCidade)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cidade_prop, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(lblEstado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(estado_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnMapa)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData)
                    .addComponent(data_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(nome_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCidade)
                    .addComponent(cidade_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstado)
                    .addComponent(estado_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordenada_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCoords)
                    .addComponent(btnMapa))
                .addGap(32, 32, 32))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(21, 60, 16)));

        lblProprietario.setText("Proprietário:");

        lblFonte.setText("Indicação:");

        fonte_prop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fonte_propActionPerformed(evt);
            }
        });

        lblValor.setText("Valor:");

        lblSituacao.setText("Situação:");

        situacao_prop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VENDA", "VENDIDA", "OUTRO" }));

        lblMatricula.setText("Nº Matriculas:");

        matricula_prop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matricula_propActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblProprietario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(proprietario_prop))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFonte)
                            .addComponent(lblValor)
                            .addComponent(lblSituacao))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(situacao_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 183, Short.MAX_VALUE))
                            .addComponent(valor_prop)
                            .addComponent(fonte_prop)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblMatricula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(matricula_prop)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProprietario)
                    .addComponent(proprietario_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFonte)
                    .addComponent(fonte_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor)
                    .addComponent(valor_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(situacao_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSituacao))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatricula)
                    .addComponent(matricula_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(21, 60, 16)));

        lblAreaTotal.setText("Area Total:");

        lblAreaReserva.setText("Área Reserva:");

        area_reserva_prop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                area_reserva_propActionPerformed(evt);
            }
        });

        lblAtividade.setText("Atividade:");

        atividade_prop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PECUÁRIA", "SOJA", "CANA", "PASTO", "OUTRO" }));

        unidade_prop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALQUEIRES", "HECTARES", "ALQUEIRÃO", "ALQUEIRINHO" }));
        unidade_prop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unidade_propActionPerformed(evt);
            }
        });

        lblBenfeitoria.setText("Benfeitoria:");

        benfeitoria_prop.setColumns(20);
        benfeitoria_prop.setRows(5);
        jScrollPane1.setViewportView(benfeitoria_prop);

        lblComplemento.setText("Complemento:");

        complemento_prop.setColumns(20);
        complemento_prop.setRows(5);
        jScrollPane2.setViewportView(complemento_prop);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblBenfeitoria)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblComplemento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblAreaTotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(area_prop)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblAtividade)
                                .addGap(18, 18, 18)
                                .addComponent(atividade_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)))
                        .addComponent(lblAreaReserva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(area_reserva_prop, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(unidade_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAreaTotal)
                    .addComponent(area_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAreaReserva)
                    .addComponent(area_reserva_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unidade_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAtividade)
                    .addComponent(atividade_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBenfeitoria)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(lblComplemento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(21, 60, 16)));

        jLabel1.setText("Adicionar a pasta da propriedade");

        btnImg.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        btnImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/imgpesq.png"))); // NOI18N
        btnImg.setText("Buscar imagens");
        btnImg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImgMouseClicked(evt);
            }
        });

        btnArquivos.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        btnArquivos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/imgpesq.png"))); // NOI18N
        btnArquivos.setText("Buscar matrícula");
        btnArquivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArquivosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnArquivos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnImg)
                        .addGap(44, 44, 44))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImg)
                    .addComponent(btnArquivos))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btnSalvar.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExcluirMouseClicked(evt);
            }
        });

        btnVoltar.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/left-arrow.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVoltarMouseClicked(evt);
            }
        });

        pasta_prop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasta_propActionPerformed(evt);
            }
        });

        btnRelatorio.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        btnRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/relatorio.png"))); // NOI18N
        btnRelatorio.setText("Emitir relatório");
        btnRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRelatorioMouseClicked(evt);
            }
        });

        btnPasta.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        btnPasta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/corretora_cunha/imgs/folder.png"))); // NOI18N
        btnPasta.setText("Abrir Pasta");
        btnPasta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPastaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnRelatorio))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(id_prop, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnPasta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pasta_prop, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNomeSistema)
                        .addGap(89, 89, 89)
                        .addComponent(lblcadatro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVoltar))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(lblcadatro))
                            .addComponent(lblNomeSistema))
                        .addGap(18, 18, 18)
                        .addComponent(id_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pasta_prop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPasta))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addGap(11, 11, 11)
                        .addComponent(btnRelatorio)
                        .addGap(25, 25, 25)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void estado_propActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estado_propActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estado_propActionPerformed

    private void fonte_propActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fonte_propActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fonte_propActionPerformed

    private void matricula_propActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matricula_propActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matricula_propActionPerformed

    private void area_reserva_propActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_area_reserva_propActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_area_reserva_propActionPerformed

    private void unidade_propActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unidade_propActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unidade_propActionPerformed

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked

        if (verificaPreenchimento()) {
            if (gravar_alterar == 1) {
                gravar();
                gravar_alterar = 2;
            } else {
                if (gravar_alterar == 2) {
                    alterar();
                } else {
                    JOptionPane.showMessageDialog(null, "Erro no Sistema!!!");
                }
            }
            new PropriedadeRurais().setVisible(true);
            this.dispose();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void btnExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExcluirMouseClicked
        excluir();
        new PropriedadeRurais().setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirMouseClicked

    private void btnVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarMouseClicked
        new PropriedadeRurais().setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVoltarMouseClicked

    private void btnRelatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRelatorioMouseClicked
        RelatorioCTR relatorioCTR = new RelatorioCTR();
        try {
            try {
                parametros.put("cod",Integer.parseInt(this.id_prop.getText()) );
                relatorioCTR.abrirRelatorio("PropriedadeR1.jasper", "Relatório de Propriedade "+id_prop, parametros).setVisible(true);

                // TODO add your handling code here:
            } catch (SQLException ex) {

                System.out.println("sql erro");
                JOptionPane.showMessageDialog(null,
                "Erro ao gerar relatório " + ex
            );
            }
        } catch (JRException ex) {
            System.out.println("jr erro");
            JOptionPane.showMessageDialog(null,
                "Erro ao gerar relatório " + ex
            );
        }
    }//GEN-LAST:event_btnRelatorioMouseClicked

    private void btnPastaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPastaMouseClicked
        try {
//            Runtime.getRuntime().exec("nemo "+this.pasta_prop.getText());
           Runtime.getRuntime().exec("nemo /home/raissa_sc6/Desktop/propriedades/");
            // TODO add your handling code here:
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Não foi posivel abrir a pasta");
        }
    }//GEN-LAST:event_btnPastaMouseClicked

    private void btnMapaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMapaMouseClicked
        if(!coordenada_prop.getText().equalsIgnoreCase("")){
            try {
                String[] textoSeparado = coordenada_prop.getText().split(", ");
                String lat = textoSeparado[0];
                String lon = textoSeparado[1];
                abreNavegador(lat, lon);
                // TODO add your handling code here:
            } catch (Exception ex) {
                
                JOptionPane.showMessageDialog(null, "Erro ao abrir o google maps");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Campo Coordenada está vazio");
        }
    }//GEN-LAST:event_btnMapaMouseClicked

    private void btnImgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImgMouseClicked
        if(verificaPreenchimento()){
            procurarImagens();
        }
    }//GEN-LAST:event_btnImgMouseClicked

    private void btnArquivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArquivosMouseClicked
         if(verificaPreenchimento()){
            procuraArquivo();
        }
    }//GEN-LAST:event_btnArquivosMouseClicked

    private void pasta_propActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasta_propActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pasta_propActionPerformed

    /**
     * @param args the command line arguments
     */
   

      private void preencherCampos(int id_prop){
        try {
            //buscar dados
            propriedadeDTO.setId_prop(id_prop);
            rs = propriedadeCTR.consultarPropriedade(propriedadeDTO, 1);
            if (rs.next()) {
                this.id_prop.setText(rs.getString("id_prop"));
                this.nome_prop.setText(rs.getString("nome_prop"));
                this.estado_prop.setSelectedItem(rs.getString("estado_prop"));
                this.situacao_prop.setSelectedItem(rs.getString("situacao_prop"));
                this.unidade_prop.setSelectedItem(rs.getString("unidade_prop"));
                this.complemento_prop.setText(rs.getString("complemento_prop"));
                this.fonte_prop.setText(rs.getString("fonte_prop"));
                this.coordenada_prop.setText(rs.getString("coordenada_prop"));
                this.atividade_prop.setSelectedItem(rs.getString("atividade_prop"));
                this.proprietario_prop.setText(rs.getString("proprietario_prop"));
                this.benfeitoria_prop.setText(rs.getString("benfeitoria_prop"));
                this.valor_prop.setText(rs.getString("valor_prop"));
                this.data_prop.setText(rs.getString("data_prop"));
                this.cidade_prop.setText(rs.getString("cidade_prop"));
                this.area_prop.setText(rs.getString("area_prop"));
                this.area_reserva_prop.setText(rs.getString("area_reserva_prop"));
                this.matricula_prop.setText(rs.getString("matricula_prop"));
                this.pasta_prop.setText(rs.getString("pasta_prop"));
            }
            if(pasta_prop.getText().equalsIgnoreCase("")){
               btnPasta.setVisible(false);
            }else{
                btnPasta.setVisible(true);
            }
        } catch (Exception e) {
        }
    }
     
   private boolean verificaPreenchimento() {
       boolean resul = true; 
        if (valor_prop.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "O campo Valor deve ser preenchido");
            valor_prop.requestFocus();
            resul = false;
        }else{
            try {
                Double.parseDouble(valor_prop.getText());
                if (cidade_prop.getText().equalsIgnoreCase("")) {
                    JOptionPane.showMessageDialog(null, "O campo Cidade deve ser preenchido");
                    cidade_prop.requestFocus();
                    resul = false;
                } else {
                    if (area_prop.getText().equalsIgnoreCase("")) {
                        JOptionPane.showMessageDialog(null, "O campo area deve ser preenchido");
                        area_prop.requestFocus();
                        resul = false;
                    }else{
                        try {
                            Integer.parseInt(area_prop.getText());
                            if(nome_prop.getText().equalsIgnoreCase("")) {
                                JOptionPane.showMessageDialog(null, "O campo nome deve ser preenchido");
                                nome_prop.requestFocus();
                                resul = false;
                            }else{
                                if(cidade_prop.getText().equalsIgnoreCase("")) {
                                    JOptionPane.showMessageDialog(null, "O campo cidade deve ser preenchido");
                                    cidade_prop.requestFocus();
                                    resul = false;
                                }else{
                                    if (area_reserva_prop.getText().equalsIgnoreCase("")) {
                                        JOptionPane.showMessageDialog(null, "O campo area reserva deve ser preenchido");
                                        area_reserva_prop.requestFocus();
                                        resul = false;
                                    }else{
                                        try {
                                            Integer.parseInt(area_reserva_prop.getText());
                                        }catch(Exception e){
                                            JOptionPane.showMessageDialog(null, "O campo Area Reserva deve conter SOMENTE NÚMEROS");
                                            area_reserva_prop.requestFocus();
                                            resul = false;
                                        }
                                    }
                                }
                            } 
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "O campo Area deve conter SOMENTE NÚMEROS");
                            area_prop.requestFocus();
                            resul = false;
                        }
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "O campo Valor deve conter SOMENTE NÚMEROS");
                valor_prop.requestFocus();
                resul = false;
            }
        } 
        return resul;
    }//Fecha método verificaPreenchimento()
    
    private void limpaCampos() {
        id_prop.setText("");
        nome_prop.setText("");
        estado_prop.setSelectedItem(1);
        situacao_prop.setSelectedItem(1);
        atividade_prop.setSelectedItem(1);
        unidade_prop.setSelectedItem(1);
        complemento_prop.setText("");
        fonte_prop.setText("");
        coordenada_prop.setText("");
        benfeitoria_prop.setText("");
        proprietario_prop.setText("");
        area_prop.setText("");
        area_reserva_prop.setText("");
        valor_prop.setText("");
        data_prop.setText("");
        cidade_prop.setText("");
        matricula_prop.setText("");
        pasta_prop.setText("");
    }//Fecha método limpacampos
    
    private void gravar() {
        try{
            propriedadeDTO.setTipo_prop("RURAL");
            System.out.println("Rural");
            propriedadeDTO.setNome_prop(nome_prop.getText());
            System.out.println("nome");
            propriedadeDTO.setAtividade_prop(atividade_prop.getSelectedItem().toString());
            System.out.println("Rural");
            propriedadeDTO.setSituacao_prop(situacao_prop.getSelectedItem().toString());
            System.out.println("Rural");
            propriedadeDTO.setEstado_prop(estado_prop.getSelectedItem().toString());
            System.out.println("Rural");
            propriedadeDTO.setComplemento_prop(complemento_prop.getText());
            System.out.println("Rural");
            propriedadeDTO.setBenfeitoria_prop(benfeitoria_prop.getText());
            System.out.println("Rural");
            propriedadeDTO.setProprietario_prop(proprietario_prop.getText());
            System.out.println("Rural");
            propriedadeDTO.setArea_prop(Integer.parseInt(area_prop.getText()));
            System.out.println("area");
            propriedadeDTO.setArea_reserva_prop(Integer.parseInt(area_reserva_prop.getText()));
            System.out.println("area rese");
            propriedadeDTO.setValor_prop(valor_prop.getText());
            System.out.println("valor");
            propriedadeDTO.setData_prop(data_prop.getText());
            System.out.println("data");
            propriedadeDTO.setCidade_prop(cidade_prop.getText());
            System.out.println("cidade");
            propriedadeDTO.setMatricula_prop(matricula_prop.getText());
            System.out.println("matricula");
            propriedadeDTO.setPasta_prop(pasta_prop.getText());
            propriedadeDTO.setCoordenada_prop(coordenada_prop.getText());
            System.out.println("pasta");
            propriedadeDTO.setUnidade_prop(unidade_prop.getSelectedItem().toString());
             System.out.println("Entrou em gravar");
            JOptionPane.showMessageDialog(null,
                    propriedadeCTR.inserirPropriedade(propriedadeDTO)
            );
            if(coordenada_prop.getText().equalsIgnoreCase("")){
                 btnMapa.setVisible(false);
             }else{
                 btnMapa.setVisible(true);
            }
        }catch(Exception e){
            System.out.println("Erro no metodo gravar propriedade rural");
            if(!pasta_prop.getText().equalsIgnoreCase("")){
                deletarDiretorio(this.pasta_prop.getText());
            }
        }
    }//Fecha método gravar()
    
    private void alterar() {
        try{
            propriedadeDTO.setId_prop(Integer.parseInt(id_prop.getText()));
            propriedadeDTO.setTipo_prop("RURAL");
            propriedadeDTO.setNome_prop(nome_prop.getText());
            propriedadeDTO.setAtividade_prop(atividade_prop.getSelectedItem().toString());
            propriedadeDTO.setSituacao_prop(situacao_prop.getSelectedItem().toString());
            propriedadeDTO.setEstado_prop(estado_prop.getSelectedItem().toString());
            propriedadeDTO.setComplemento_prop(complemento_prop.getText());
            propriedadeDTO.setBenfeitoria_prop(benfeitoria_prop.getText());
            propriedadeDTO.setProprietario_prop(proprietario_prop.getText());
            propriedadeDTO.setCoordenada_prop(coordenada_prop.getText());
            propriedadeDTO.setArea_prop(Integer.parseInt(area_prop.getText()));
            propriedadeDTO.setArea_reserva_prop(Integer.parseInt(area_reserva_prop.getText()));
            propriedadeDTO.setValor_prop(valor_prop.getText());
            propriedadeDTO.setData_prop(data_prop.getText());
            propriedadeDTO.setCidade_prop(cidade_prop.getText());
            propriedadeDTO.setMatricula_prop(matricula_prop.getText());
            propriedadeDTO.setPasta_prop(pasta_prop.getText());
            propriedadeDTO.setUnidade_prop(unidade_prop.getSelectedItem().toString());
            if(coordenada_prop.getText().equalsIgnoreCase("")){
                 btnMapa.setVisible(false);
             }else{
                 btnMapa.setVisible(true);
            }
            JOptionPane.showMessageDialog(null,
                    propriedadeCTR.alterarPropriedade(propriedadeDTO)
            );
        }catch(Exception e){
            System.out.println("Erro no metodo alterar propriedade rural");
            if(!pasta_prop.getText().equalsIgnoreCase("")){
                deletarDiretorio(this.pasta_prop.getText());
            }
        }
    }//Fecha método alterar()
    
    private void excluir(){
        if (JOptionPane.showConfirmDialog(null, "Deseja Realmente excluir a propriedade?", "Aviso", 
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                if(!pasta_prop.getText().equalsIgnoreCase("")){
                    deletarDiretorio(this.pasta_prop.getText());
                }

                JOptionPane.showMessageDialog(null, propriedadeCTR.excluirPropriedade(propriedadeDTO));
            } catch (Exception e) {
            }
        }
    }//Fecha método excluir()
    
    //Procurar matricula
    private void procuraArquivo(){
        //criando um filto para buscar somente arquivos PDFs
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Arquivo PDF (.pdf)", "pdf");
        
       //onde ira abrir
        JFileChooser choose = new JFileChooser(new File("/home/raissa_sc6/Desktop/propriedades"));
        //titulo da caixa
        choose.setDialogTitle("Procurar Arquivos de Matriculas");
       //somente arquivos
        choose.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //o caminho da imagem
        String caminhoArquivo = "";
        
        
        //se for aprovado pelo usuario
        int retorno = choose.showSaveDialog(null);
        if(retorno == JFileChooser.APPROVE_OPTION){
            try {
                 //pega o nome do arquivo
                String nomeArquivo = choose.getSelectedFile().getName();
                //pega o caminho do arquivo
                caminhoArquivo = choose.getSelectedFile().getAbsolutePath();
              
                //pega o arquivo
                File f1 = choose.getSelectedFile();
                //diretorio de destino
                
                String caminhoDestinoPadrao = "/home/raissa_sc6/Desktop/propriedades";
                File diretorio = new File (caminhoDestinoPadrao);
                if(diretorio.exists()){
                   //Aqui realizaria a cópia do arquivo
                    System.out.println("Diretorio já existe no sistema");
                }else{
                    //Aqui você criaria a pasta e realizaria a cópia do arquivo.
                   diretorio.mkdirs();
                }
                 //criar uma pasta com o  estado da propriedade 
                String caminhoestado = caminhoDestinoPadrao+"/"+estado_prop.getSelectedItem().toString();
                File dEstado = new File (caminhoestado);
                if(dEstado.exists()){
                   //Aqui realizaria a cópia do arquivo
                    System.out.println("Diretorio já existe no sistema");
                }else{
                    //Aqui você criaria a pasta e realizaria a cópia do arquivo.
                   dEstado.mkdirs();
                }
                //cidade
                String caminhocidade = caminhoestado+"/"+cidade_prop.getText();
                File dCidade = new File (caminhocidade);
                if(dCidade.exists()){
                   //Aqui realizaria a cópia do arquivo
                    System.out.println("Diretorio já existe no sistema");
                }else{
                    //Aqui você criaria a pasta e realizaria a cópia do arquivo.
                   dCidade.mkdirs();
                }
                //dps com o nome;
                String caminhonome = caminhocidade+"/"+nome_prop.getText()+" "+area_prop.getText();
                File dNome = new File (caminhonome);
                if(dNome.exists()){
                   //Aqui realizaria a cópia do arquivo
                    System.out.println("Diretorio já existe no sistema");
                }else{
                    //Aqui você criaria a pasta e realizaria a cópia do arquivo.
                   dNome.mkdirs();
                }
                //cria e nomeia o novo arquivo
                File f2 = new File(dNome +"/"+ nomeArquivo);
                  //add no tf
                pasta_prop.setText(dNome+"/");
                btnPasta.setVisible(true);
                //copiar o arquivo em outra pasta
                 copyFile(f1, f2 );
            } catch (Exception e) {
                System.out.println("Erro ao pegar o arquivo");
            }
        }
    }

    private void procurarImagens(){
        //criando um filto para buscar somente imagens
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagens", "jpeg", "png", "jpg", "jpg");
        //onde ira abrir
        JFileChooser choose = new JFileChooser(new File("/home/raissa_sc6/Desktop/propriedades"));
        //titulo da caixa
        choose.setDialogTitle("Procurar Imagens");
       //somente arquivos
        choose.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //Permite selecionar várias imagens
        choose.setMultiSelectionEnabled(true);
        
        
        //Abre janela de seleção
        int retorno = choose.showOpenDialog(this);
        if(retorno == JFileChooser.APPROVE_OPTION){ // se selecionado e confirmado
            // Retorna os arquivos selecionados. Este método retorna vazio se
            // o modo de múltipla seleção de arquivos não estiver ativada.
            
            File[] files = choose.getSelectedFiles();
      
            //add no tf
            String caminhoDestinoPadrao = "/home/raissa_sc6/Desktop/propriedades";
            String caminhoestado = caminhoDestinoPadrao+"/"+estado_prop.getSelectedItem().toString();
            String caminhocidade = caminhoestado+"/"+cidade_prop.getText();
            String caminhonome = caminhocidade+"/"+nome_prop.getText()+" "+area_prop.getText();
            pasta_prop.setText(caminhonome+"/");
            btnPasta.setVisible(true);
            //COPIANDO ARQUIVO POR ARQUIVO
            for(int i=0; files.length>i; i++){
                File f1 = files[i];
                imagem(f1);
                
            }
        }
        
    }
    
    private void imagem(File f1){
        //se for aprovado pelo usuario
        //o caminho da imagem
        String caminhoArquivo = "";
        try {
             //pega o nome do arquivo
            String nomeArquivo = f1.getName();
            //pega o caminho do arquivo
            caminhoArquivo = f1.getAbsolutePath();
            //diretorio de destino
            String caminhoDestinoPadrao = "/home/raissa_sc6/Desktop/propriedades";
            File diretorio = new File (caminhoDestinoPadrao);
            if(diretorio.exists()){
               //Aqui realizaria a cópia do arquivo
            }else{
                //Aqui você criaria a pasta e realizaria a cópia do arquivo.
               diretorio.mkdirs();
            }
             //criar uma pasta com o  estado da propriedade 
            String caminhoestado = caminhoDestinoPadrao+"/"+estado_prop.getSelectedItem().toString();
            File dEstado = new File (caminhoestado);
            if(dEstado.exists()){
               //Aqui realizaria a cópia do arquivo
            }else{
                //Aqui você criaria a pasta e realizaria a cópia do arquivo.
               dEstado.mkdirs();
            }
            //cidade
            String caminhocidade = caminhoestado+"/"+cidade_prop.getText();
            File dCidade = new File (caminhocidade);
            if(dCidade.exists()){
               //Aqui realizaria a cópia do arquivo
            }else{
                //Aqui você criaria a pasta e realizaria a cópia do arquivo.
               dCidade.mkdirs();
            }
            //dps com o nome;
            String caminhonome = caminhocidade+"/"+nome_prop.getText()+" "+area_prop.getText();
            File dNome = new File (caminhonome);
            if(dNome.exists()){
               //Aqui realizaria a cópia do arquivo
            }else{
                //Aqui você criaria a pasta e realizaria a cópia do arquivo.
               dNome.mkdirs();
            }
            //cria e nomeia o novo arquivo
            File f2 = new File(dNome +"/"+ nomeArquivo);
            //copiar o arquivo em outra pasta
             System.out.println("f2:"+ f2);
             copyFile(f1, f2 );
        } catch (Exception e) {
            System.out.println("Erro ao pegar o arquivo");
        }
    }
    
    public static void copyFile(File source, File destination) throws IOException {
        if (destination.exists())
        destination.delete();
        FileChannel sourceChannel = null;
        FileChannel destinationChannel = null;

        try {
             System.out.println("source :"+ source);
              System.out.println("destination :"+ destination);
            sourceChannel = new FileInputStream(source).getChannel();
            destinationChannel = new FileOutputStream(destination).getChannel();
            sourceChannel.transferTo(0, sourceChannel.size(),
                    destinationChannel);
        } finally {
            if (sourceChannel != null && sourceChannel.isOpen())
                sourceChannel.close();
            if (destinationChannel != null && destinationChannel.isOpen())
                destinationChannel.close();
       }
    }
    
    private void abreNavegador(String lat, String lon) throws Exception{
        //rmc dados;
     String url1 = "http://maps.google.com.br/maps?hl=pt-br&biw=1600&bih=718&q=";
    String url2 = "%2C";
    String url3 = "&um=1&ie=UTF-8&sa=N&tab=wl";  
    String urlFinal = url1+lat+url2+lon+url3;
    try {
        URI uri = new URI(urlFinal);
        Desktop desktop = null;
        if (Desktop.isDesktopSupported()) {
            desktop = Desktop.getDesktop();
        }
        if (desktop != null)
            desktop.browse(uri);
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (URISyntaxException use) {
            use.printStackTrace();
    }
}
    
   
    
     public void removerDiretorio (File f) {
        if (f.isDirectory()) {
            File[] files = f.listFiles();
            for (int i = 0; i < files.length; ++i) {
                removerDiretorio  (files[i]);
            }
        }
        f.delete();
    }

    public void deletarDiretorio(String diretorio) {
        removerDiretorio  (new File (diretorio));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField area_prop;
    private javax.swing.JTextField area_reserva_prop;
    private javax.swing.JComboBox<String> atividade_prop;
    private javax.swing.JTextArea benfeitoria_prop;
    private javax.swing.JLabel btnArquivos;
    private javax.swing.JLabel btnExcluir;
    private javax.swing.JLabel btnImg;
    private javax.swing.JLabel btnMapa;
    private javax.swing.JLabel btnPasta;
    private javax.swing.JLabel btnRelatorio;
    private javax.swing.JLabel btnSalvar;
    private javax.swing.JLabel btnVoltar;
    private javax.swing.JTextField cidade_prop;
    private javax.swing.JTextArea complemento_prop;
    private javax.swing.JTextField coordenada_prop;
    private javax.swing.JTextField data_prop;
    private javax.swing.JComboBox<String> estado_prop;
    private javax.swing.JTextField fonte_prop;
    private javax.swing.JTextField id_prop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAreaReserva;
    private javax.swing.JLabel lblAreaTotal;
    private javax.swing.JLabel lblAtividade;
    private javax.swing.JLabel lblBenfeitoria;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblCoords;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFonte;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNomeSistema;
    private javax.swing.JLabel lblProprietario;
    private javax.swing.JLabel lblSituacao;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel lblcadatro;
    private javax.swing.JTextField matricula_prop;
    private javax.swing.JTextField nome_prop;
    private javax.swing.JTextField pasta_prop;
    private javax.swing.JTextField proprietario_prop;
    private javax.swing.JComboBox<String> situacao_prop;
    private javax.swing.JComboBox<String> unidade_prop;
    private javax.swing.JTextField valor_prop;
    // End of variables declaration//GEN-END:variables
}
